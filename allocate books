//  https://bit.ly/3GiCqY0 

#include <bits/stdc++.h> 
bool possible(long long mid, int m, int n, vector<int>& time) {
    int day = 1;
    long long chapters = 0;

    for (int i = 0; i < m; ++i) {
        if (time[i] > mid) return false; // single chapter exceeds limit

        if (chapters + time[i] <= mid) {
            chapters += time[i];
        } else {
            day++;
            chapters = time[i];
        }

        if (day > n) return false;
    }

    return true;
}
long long ayushGivesNinjatest(int n, int m, vector<int> time) 
{	
	long long total=0;
	for(int i=0;i<m;i++){
		total+=time[i];
	}
	if(n==1){
		return total;
	}
	long long start=0;
	long long end=total;
	long long mid;
	long long ans=total;
	while(start<=end){
		mid=start+(end-start)/2;
		bool is_possible=possible(mid,m,n,time);
		if(is_possible){
			ans=mid;
			end=mid-1;
		}
		else{
			start=mid+1;
		}
	}
	return ans;
	// Write your code here.
}
